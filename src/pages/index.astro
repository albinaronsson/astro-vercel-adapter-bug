‚óè ---
  import { Picture } from "astro:assets";
  import dakotaRightImg from "../assets/dakota_right_season.jpg";
  import dakotaWrongImg from "../assets/dakota_wrong_season.jpg";
  import sofiaRightImg from "../assets/sofia_right_season.jpg";
  import sofiaWrongImg from "../assets/sofia_wrong_season.jpg";
  ---

  <html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Vercel Image Service Bug Repro</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      body {
        font-family: system-ui, -apple-system, sans-serif;
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
      }
      h1 {
        text-align: center;
        margin-bottom: 30px;
      }
      .grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
      }
      .image-card {
        border: 2px solid #ccc;
        border-radius: 8px;
        padding: 15px;
        background: #f9f9f9;
      }
      .image-card.error {
        border-color: #ff4444;
        background: #fff5f5;
      }
      .image-card h3 {
        margin: 0 0 10px 0;
        font-size: 16px;
        color: #333;
      }
      .image-info {
        font-size: 12px;
        color: #666;
        margin-bottom: 10px;
        font-family: monospace;
      }
      .image-container {
        width: 100%;
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
        overflow: hidden;
        position: relative;
      }
      .image-container img {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
      }
      .status-badge {
        position: absolute;
        top: 5px;
        right: 5px;
        padding: 3px 8px;
        border-radius: 3px;
        font-size: 11px;
        font-weight: bold;
        color: white;
      }
      .status-loaded {
        background: #4CAF50;
      }
      .status-error {
        background: #ff4444;
      }
      .url-display {
        margin-top: 10px;
        padding: 8px;
        background: #f0f0f0;
        border-radius: 4px;
        font-size: 11px;
        word-break: break-all;
        font-family: monospace;
      }
      .link-section {
        margin-top: 15px;
        padding-top: 15px;
        border-top: 1px solid #ddd;
      }
      .link-group {
        margin-bottom: 10px;
      }
      .link-label {
        font-size: 11px;
        font-weight: bold;
        color: #666;
        margin-bottom: 5px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }
      .test-link {
        display: inline-block;
        padding: 6px 12px;
        background: #0066cc;
        color: white;
        text-decoration: none;
        border-radius: 4px;
        font-size: 12px;
        margin-right: 8px;
        margin-bottom: 5px;
      }
      .test-link:hover {
        background: #0052a3;
      }
      .test-link.original {
        background: #ff6b6b;
      }
      .test-link.original:hover {
        background: #ff5252;
      }
      .test-link.fixed {
        background: #4CAF50;
      }
      .test-link.fixed:hover {
        background: #45a049;
      }
      .url-comparison {
        display: grid;
        gap: 8px;
        margin-top: 10px;
      }
      .url-item {
        padding: 8px;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 11px;
        font-family: monospace;
        word-break: break-all;
      }
      .url-item.broken {
        background: #fff5f5;
        border-color: #ff4444;
      }
      .url-item.fixed {
        background: #f0fff0;
        border-color: #4CAF50;
      }
      .url-label {
        font-weight: bold;
        color: #666;
        margin-bottom: 3px;
      }
      pre {
        background: #f5f5f5;
        padding: 15px;
        border-radius: 4px;
        overflow-x: auto;
        font-size: 12px;
      }
    </style>
  </head>
  <body>
    <h1>üêõ Vercel Image Service URL Bug Reproduction</h1>

    <div class="grid">
      <div class="image-card" data-image="dakota-right">
        <h3>Dakota Right</h3>
        <div class="image-info">
          Original: 59KB<br>
          Dimensions: <span class="dimensions">500x750</span><br>
          Requested width: 400, 800
        </div>
        <div class="image-container">
          <Picture
            src={dakotaRightImg}
            alt="Dakota Right Season"
            widths={[400, 800]}
            formats={["avif", "webp", "jpeg"]}
            sizes="(max-width: 800px) 100vw, 800px"
          />
          <span class="status-badge" style="display: none;"></span>
        </div>
        <div class="link-section">
          <div class="link-group">
            <div class="link-label">Test Links:</div>
            <a href="#" class="test-link original" target="_blank">Original URL</a>
            <a href="#" class="test-link fixed" target="_blank">Fixed URL</a>
          </div>
          <div class="url-comparison">
            <div class="url-item broken">
              <div class="url-label">‚ùå Generated (Broken):</div>
              <span class="original-url"></span>
            </div>
            <div class="url-item fixed">
              <div class="url-label">‚úÖ Fixed (Working):</div>
              <span class="fixed-url"></span>
            </div>
          </div>
        </div>
      </div>

      <div class="image-card" data-image="dakota-wrong">
        <h3>Dakota Wrong</h3>
        <div class="image-info">
          Original: 348KB<br>
          Dimensions: <span class="dimensions">1229x1559</span><br>
          Requested width: 400, 800
        </div>
        <div class="image-container">
          <Picture
            src={dakotaWrongImg}
            alt="Dakota Wrong Season"
            widths={[400, 800]}
            formats={["avif", "webp", "jpeg"]}
            sizes="(max-width: 800px) 100vw, 800px"
          />
          <span class="status-badge" style="display: none;"></span>
        </div>
        <div class="link-section">
          <div class="link-group">
            <div class="link-label">Test Links:</div>
            <a href="#" class="test-link original" target="_blank">Original URL</a>
            <a href="#" class="test-link fixed" target="_blank">Fixed URL</a>
          </div>
          <div class="url-comparison">
            <div class="url-item broken">
              <div class="url-label">‚ùå Generated (Broken):</div>
              <span class="original-url"></span>
            </div>
            <div class="url-item fixed">
              <div class="url-label">‚úÖ Fixed (Working):</div>
              <span class="fixed-url"></span>
            </div>
          </div>
        </div>
      </div>

      <div class="image-card" data-image="sofia-right">
        <h3>Sofia Right</h3>
        <div class="image-info">
          Original: 453KB<br>
          Dimensions: <span class="dimensions">3840x2160</span><br>
          Requested width: 400, 800
        </div>
        <div class="image-container">
          <Picture
            src={sofiaRightImg}
            alt="Sofia Right Season"
            widths={[400, 800]}
            formats={["avif", "webp", "jpeg"]}
            sizes="(max-width: 800px) 100vw, 800px"
          />
          <span class="status-badge" style="display: none;"></span>
        </div>
        <div class="link-section">
          <div class="link-group">
            <div class="link-label">Test Links:</div>
            <a href="#" class="test-link original" target="_blank">Original URL</a>
            <a href="#" class="test-link fixed" target="_blank">Fixed URL</a>
          </div>
          <div class="url-comparison">
            <div class="url-item broken">
              <div class="url-label">‚ùå Generated (Broken):</div>
              <span class="original-url"></span>
            </div>
            <div class="url-item fixed">
              <div class="url-label">‚úÖ Fixed (Working):</div>
              <span class="fixed-url"></span>
            </div>
          </div>
        </div>
      </div>

      <div class="image-card" data-image="sofia-wrong">
        <h3>Sofia Wrong</h3>
        <div class="image-info">
          Original: 325KB<br>
          Dimensions: <span class="dimensions">2898x1920</span><br>
          Requested width: 400, 800
        </div>
        <div class="image-container">
          <Picture
            src={sofiaWrongImg}
            alt="Sofia Wrong Season"
            widths={[400, 800]}
            formats={["avif", "webp", "jpeg"]}
            sizes="(max-width: 800px) 100vw, 800px"
          />
          <span class="status-badge" style="display: none;"></span>
        </div>
        <div class="link-section">
          <div class="link-group">
            <div class="link-label">Test Links:</div>
            <a href="#" class="test-link original" target="_blank">Original URL</a>
            <a href="#" class="test-link fixed" target="_blank">Fixed URL</a>
          </div>
          <div class="url-comparison">
            <div class="url-item broken">
              <div class="url-label">‚ùå Generated (Broken):</div>
              <span class="original-url"></span>
            </div>
            <div class="url-item fixed">
              <div class="url-label">‚úÖ Fixed (Working):</div>
              <span class="fixed-url"></span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <h2>Full URL Analysis</h2>
    <pre id="urls"></pre>

    <script>
      // Check image loading status and setup comparison links
      document.addEventListener('DOMContentLoaded', () => {
        const cards = document.querySelectorAll('.image-card');
        let loadedCount = 0;
        let errorCount = 0;

        cards.forEach(card => {
          const img = card.querySelector('img');
          const statusBadge = card.querySelector('.status-badge');
          const originalUrlSpan = card.querySelector('.original-url');
          const fixedUrlSpan = card.querySelector('.fixed-url');
          const dimensions = card.querySelector('.dimensions');
          const originalLink = card.querySelector('.test-link.original');
          const fixedLink = card.querySelector('.test-link.fixed');

          if (img) {
            // Get the original URL
            const originalUrl = img.src;

            // Create fixed URL by ensuring the leading slash is present
            let fixedUrl = originalUrl;
            if (originalUrl.includes('url=_astro')) {
              // Replace url=_astro with url=%2F_astro (add the encoded slash)
              fixedUrl = originalUrl.replace(/url=_astro/, 'url=%2F_astro');
            }

            // Display URLs
            originalUrlSpan.textContent = originalUrl;
            fixedUrlSpan.textContent = fixedUrl;

            // Set link hrefs
            originalLink.href = originalUrl;
            fixedLink.href = fixedUrl;

            // Update dimensions if available
            if (img.naturalWidth && img.naturalHeight) {
              dimensions.textContent = `${img.naturalWidth}x${img.naturalHeight}`;
            }

            // Check if image loaded
            const checkImage = () => {
              if (img.complete) {
                if (img.naturalWidth === 0) {
                  // Image failed to load
                  card.classList.add('error');
                  statusBadge.textContent = 'FAILED';
                  statusBadge.className = 'status-badge status-error';
                  statusBadge.style.display = 'block';
                  errorCount++;
                } else {
                  // Image loaded successfully
                  statusBadge.textContent = 'LOADED';
                  statusBadge.className = 'status-badge status-loaded';
                  statusBadge.style.display = 'block';
                  loadedCount++;
                }
              }
            };

            if (img.complete) {
              checkImage();
            } else {
              img.addEventListener('load', () => {
                loadedCount++;
                statusBadge.textContent = 'LOADED';
                statusBadge.className = 'status-badge status-loaded';
                statusBadge.style.display = 'block';

                // Update actual dimensions
                dimensions.textContent = `${img.naturalWidth}x${img.naturalHeight}`;
              });

              img.addEventListener('error', () => {
                errorCount++;
                card.classList.add('error');
                statusBadge.textContent = 'FAILED';
                statusBadge.className = 'status-badge status-error';
                statusBadge.style.display = 'block';
              });
            }
          }
        });

        // Display all image URLs with analysis
        const images = document.querySelectorAll('img');
        const urls = Array.from(images).map(img => {
          const actualWidth = img.getAttribute('width') || 'auto';
          const generatedWidth = img.src.match(/w=(\d+)/)?.[1] || 'unknown';
          const hasLeadingSlash = img.src.includes('url=%2F_astro');
          const status = hasLeadingSlash ? '‚úÖ CORRECT' : '‚ùå MISSING SLASH';

          return `${img.alt}:
    Status: ${status}
    URL: ${img.src}
    Generated width: ${generatedWidth}px
    Original dimensions: ${img.getAttribute('inputtedwidth') || actualWidth} x ${img.getAttribute('height') || 'auto'}
    Issue: ${!hasLeadingSlash ? 'Missing "/" before "_astro" in URL parameter' : 'None'}`;
        }).join('\n\n');
        document.getElementById('urls').textContent = urls;
      });
    </script>
  </body>
  </html>